import React, { useState } from 'react';
import { Link } from 'react-router-dom';
import { ArrowLeft, TreePine, Mountain, Leaf, Eye, Camera, BarChart3, Calendar, Crown, MapPin, Clock, Thermometer, Droplets, Wind, Sun, Activity, Zap, Award, Users, Heart } from 'lucide-react';

const TreeDetail = () => {
  const [activeView, setActiveView] = useState('3d');
  const [rotationY, setRotationY] = useState(0);
  const [rotationX, setRotationX] = useState(0);
  const [selectedSensor, setSelectedSensor] = useState('overview');

  // Enhanced tree data with more detailed information
  const tree = {
    id: 1,
    name: 'Tr√† Shan Tuy·∫øt Ho√†ng Gia #001',
    scientificName: 'Camellia sinensis var. assamica',
    type: 'rent',
    startDate: '2024-12-01',
    status: 'excellent',
    location: 'V∆∞·ªùn A - Khu v·ª±c ƒê·ªânh Cao',
    coordinates: '22.3364¬∞ N, 103.7734¬∞ E',
    altitude: '2,800m',
    image: 'https://i.pinimg.com/1200x/19/6c/12/196c120c0ebba026466d7ae73da3947a.jpg',
    images: [
      'https://i.pinimg.com/1200x/19/6c/12/196c120c0ebba026466d7ae73da3947a.jpg',
      'https://i.pinimg.com/1200x/98/85/f3/9885f38dc02d4aad94ffe92bfc728894.jpg',
      'https://images.pexels.com/photos/4753879/pexels-photo-4753879.jpeg?auto=compress&cs=tinysrgb&w=800',
      'https://i.pinimg.com/1200x/19/6c/12/196c120c0ebba026466d7ae73da3947a.jpg'
    ],
    lastCare: '2025-01-15',
    nextCare: '2025-01-20',
    healthScore: 98,
    notes: 'C√¢y ph√°t tri·ªÉn xu·∫•t s·∫Øc, l√° xanh m∆∞·ªõt nh∆∞ ng·ªçc b√≠ch',
    age: 1200,
    height: '8.5m',
    diameter: '85cm',
    trunkCircumference: '2.67m',
    canopySpread: '12m',
    rootDepth: '4.2m',
    leafCount: '~50,000',
    branchCount: 47,
    rarity: 'Huy·ªÅn tho·∫°i',
    discoveryYear: 1823,
    culturalSignificance: 'ƒê∆∞·ª£c coi l√† c√¢y thi√™ng c·ªßa b·∫£n ƒë·ªãa',
    teaQuality: 'ƒê·∫∑c c·∫•p AAA+',
    annualYield: '15kg tr√† kh√¥',
    marketValue: '85,000,000 VNƒê',
    environment: {
      temperature: '18¬∞C',
      humidity: '85%',
      windSpeed: '12 km/h',
      sunlight: '6h/ng√†y',
      soilPh: '6.2',
      rainfall: '2,400mm/nƒÉm',
      airQuality: 'Xu·∫•t s·∫Øc (AQI: 15)',
      uvIndex: 'Trung b√¨nh (4/10)'
    },
    sensors: {
      soilMoisture: { value: 72, unit: '%', status: 'optimal', lastUpdate: '5 ph√∫t tr∆∞·ªõc' },
      nutrients: { value: 94, unit: '%', status: 'excellent', lastUpdate: '1 gi·ªù tr∆∞·ªõc' },
      growth: { value: 0.3, unit: 'mm/ng√†y', status: 'healthy', lastUpdate: '12 gi·ªù tr∆∞·ªõc' },
      stress: { value: 8, unit: '%', status: 'low', lastUpdate: '30 ph√∫t tr∆∞·ªõc' }
    },
    careHistory: [
      { 
        date: '2025-01-15', 
        action: 'Ki·ªÉm tra s·ª©c kh·ªèe t·ªïng qu√°t', 
        status: 'Ho√†n th√†nh', 
        note: 'C√¢y ph√°t tri·ªÉn t·ªët, l√° xanh m∆∞·ªõt, kh√¥ng c√≥ d·∫•u hi·ªáu b·ªánh t·∫≠t. Ph√°t hi·ªán 3 ch·ªìi non m·ªõi.',
        technician: 'Th·∫ßy Minh - Chuy√™n gia c√¢y tr√†',
        duration: '45 ph√∫t',
        tools: ['K√≠nh l√∫p chuy√™n d·ª•ng', 'M√°y ƒëo pH', 'C·∫£m bi·∫øn ƒë·ªô ·∫©m']
      },
      { 
        date: '2025-01-10', 
        action: 'B√≥n ph√¢n h·ªØu c∆° cao c·∫•p', 
        status: 'Ho√†n th√†nh', 
        note: 'S·ª≠ d·ª•ng ph√¢n compost t·ª´ l√° r·ª´ng t·ª± nhi√™n k·∫øt h·ª£p v·ªõi ph√¢n c√° v√† tro tr·∫•u',
        technician: 'Anh D≈©ng - K·ªπ thu·∫≠t vi√™n',
        duration: '30 ph√∫t',
        tools: ['Ph√¢n h·ªØu c∆° ƒë·∫∑c ch·∫ø', 'D·ª•ng c·ª• b√≥n ph√¢n']
      },
      { 
        date: '2025-01-05', 
        action: 'T∆∞·ªõi n∆∞·ªõc v√† ki·ªÉm tra h·ªá th·ªëng', 
        status: 'Ho√†n th√†nh', 
        note: 'S·ª≠ d·ª•ng n∆∞·ªõc su·ªëi n√∫i trong, ƒë·ªô ·∫©m ƒë·∫•t ƒë·∫°t 70%. H·ªá th·ªëng t∆∞·ªõi nh·ªè gi·ªçt ho·∫°t ƒë·ªông t·ªët.',
        technician: 'Ch·ªã Lan - Chuy√™n vi√™n chƒÉm s√≥c',
        duration: '20 ph√∫t',
        tools: ['H·ªá th·ªëng t∆∞·ªõi t·ª± ƒë·ªông', 'M√°y ƒëo ƒë·ªô ·∫©m ƒë·∫•t']
      },
      { 
        date: '2025-01-01', 
        action: 'C·∫Øt t·ªâa v√† t·∫°o h√¨nh', 
        status: 'Ho√†n th√†nh', 
        note: 'Lo·∫°i b·ªè 5 c√†nh kh√¥, t·ªâa 12 c√†nh ph·ª•, t·∫°o h√¨nh c√¢y ƒë·∫πp t·ª± nhi√™n theo phong th·ªßy',
        technician: 'Th·∫ßy H√πng - Ngh·ªá nh√¢n t·∫°o h√¨nh',
        duration: '90 ph√∫t',
        tools: ['K√©o c·∫Øt chuy√™n d·ª•ng', 'Dao t·ªâa', 'Thu·ªëc b·∫£o v·ªá v·∫øt c·∫Øt']
      }
    ],
    achievements: [
      { title: 'C√¢y Tr√† Xu·∫•t S·∫Øc 2024', organization: 'Hi·ªáp h·ªôi Tr√† Vi·ªát Nam', date: '2024-12-01' },
      { title: 'Di s·∫£n Thi√™n nhi√™n Qu√Ω hi·∫øm', organization: 'B·ªô T√†i nguy√™n & M√¥i tr∆∞·ªùng', date: '2024-10-15' },
      { title: 'Ch·ª©ng nh·∫≠n Organic Premium', organization: 'T·ªï ch·ª©c Ch·ª©ng nh·∫≠n Qu·ªëc t·∫ø', date: '2024-08-20' }
    ],
    folklore: {
      legend: 'Truy·ªÅn thuy·∫øt k·ªÉ r·∫±ng c√¢y tr√† n√†y ƒë∆∞·ª£c tr·ªìng b·ªüi m·ªôt v·ªã ti√™n n·ªØ ƒë·ªÉ b·∫£o v·ªá b·∫£n l√†ng kh·ªèi b·ªánh t·∫≠t.',
      culturalValue: 'Ng∆∞·ªùi d√¢n ƒë·ªãa ph∆∞∆°ng tin r·∫±ng u·ªëng tr√† t·ª´ c√¢y n√†y s·∫Ω mang l·∫°i s·ª©c kh·ªèe v√† tr∆∞·ªùng th·ªç.',
      rituals: 'M·ªói nƒÉm v√†o ng√†y r·∫±m th√°ng 3, b·∫£n l√†ng t·ªï ch·ª©c l·ªÖ c√∫ng t·∫° ∆°n c√¢y tr√†.'
    }
  };

  // Mouse move handler for 3D effect
  const handleMouseMove = (e: React.MouseEvent<HTMLDivElement>) => {
    if (activeView !== '3d') return;
    
    const rect = e.currentTarget.getBoundingClientRect();
    const centerX = rect.left + rect.width / 2;
    const centerY = rect.top + rect.height / 2;
    
    const rotateX = (e.clientY - centerY) / 10;
    const rotateY = (e.clientX - centerX) / 10;
    
    setRotationX(-rotateX);
    setRotationY(rotateY);
  };

  const handleMouseLeave = () => {
    setRotationX(0);
    setRotationY(0);
  };

  const getStatusColor = (status: string) => {
    const colors = {
      excellent: 'from-green-500 to-emerald-500',
      healthy: 'from-blue-500 to-cyan-500',
      good: 'from-yellow-500 to-orange-500',
      warning: 'from-orange-500 to-red-500',
      optimal: 'from-green-500 to-emerald-500',
      low: 'from-blue-500 to-cyan-500'
    };
    return colors[status as keyof typeof colors] || 'from-gray-500 to-gray-600';
  };

  const getStatusText = (status: string) => {
    const texts = {
      excellent: 'Xu·∫•t s·∫Øc',
      healthy: 'Kh·ªèe m·∫°nh',
      good: 'T·ªët',
      warning: 'C·∫ßn ch√∫ √Ω',
      optimal: 'T·ªëi ∆∞u',
      low: 'Th·∫•p'
    };
    return texts[status as keyof typeof texts] || 'Kh√¥ng x√°c ƒë·ªãnh';
  };

  const getSensorIcon = (sensor: string) => {
    const icons = {
      soilMoisture: Droplets,
      nutrients: Leaf,
      growth: Activity,
      stress: Zap
    };
    return icons[sensor as keyof typeof icons] || Activity;
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-vintage-50 via-forest-50 to-vintage-100 pt-20">
      {/* Background effects */}
      <div className="fixed inset-0 forest-texture opacity-20 pointer-events-none" />
      <div className="absolute top-20 left-10 text-6xl opacity-10 animate-sway">üå≤</div>
      <div className="absolute bottom-20 right-10 text-5xl opacity-15 animate-float">üçÉ</div>

      {/* Back button */}
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <Link 
          to="/my-trees" 
          className="inline-flex items-center space-x-2 text-forest-600 hover:text-forest-700 transition-colors duration-300 group"
        >
          <ArrowLeft className="h-5 w-5 group-hover:-translate-x-1 transition-transform duration-300" />
          <span className="font-nature font-medium">Quay l·∫°i r·ª´ng c·ªßa t√¥i</span>
        </Link>
      </div>

      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 pb-16">
        {/* Enhanced Header */}
        <div className="text-center mb-12">
          <div className="inline-flex items-center space-x-3 px-6 py-3 bg-forest-100/80 backdrop-blur-sm rounded-full mb-6 border border-forest-200/50">
            <TreePine className="h-5 w-5 text-forest-600 animate-branch-sway" />
            <span className="text-forest-700 text-sm font-nature font-medium">Chi ti·∫øt c√¢y tr√† c·ªßa b·∫°n</span>
            <Crown className="h-4 w-4 text-forest-500 animate-float" />
          </div>
          
          <h1 className="font-elegant font-bold text-forest-900 mb-4">
            <span className="block text-4xl lg:text-6xl">{tree.name}</span>
            <span className="block text-lg lg:text-xl text-forest-600 font-nature italic mt-2">{tree.scientificName}</span>
          </h1>
          
          <div className="flex flex-wrap items-center justify-center gap-6 text-forest-700">
            <div className="flex items-center space-x-2">
              <Clock className="h-5 w-5" />
              <span className="font-nature">Tu·ªïi: {tree.age} nƒÉm</span>
            </div>
            <div className="flex items-center space-x-2">
              <MapPin className="h-5 w-5" />
              <span className="font-nature">{tree.location}</span>
            </div>
            <div className="flex items-center space-x-2">
              <Mountain className="h-5 w-5" />
              <span className="font-nature">{tree.altitude}</span>
            </div>
            <div className="flex items-center space-x-2">
              <Award className="h-5 w-5" />
              <span className="font-nature">Ph√°t hi·ªán: {tree.discoveryYear}</span>
            </div>
          </div>
        </div>

        <div className="grid grid-cols-1 xl:grid-cols-4 gap-8">
          {/* Enhanced 3D Tree Viewer */}
          <div className="xl:col-span-3 space-y-8">
            {/* View Controls */}
            <div className="flex items-center justify-center space-x-4">
              <button
                onClick={() => setActiveView('3d')}
                className={`px-6 py-3 rounded-full font-nature font-medium transition-all duration-300 ${
                  activeView === '3d'
                    ? 'bg-gradient-to-r from-forest-600 to-forest-700 text-white shadow-forest'
                    : 'bg-vintage-100 text-forest-600 hover:bg-forest-100'
                }`}
              >
                <span className="flex items-center space-x-2">
                  <Eye className="h-4 w-4" />
                  <span>Xem 3D</span>
                </span>
              </button>
              <button
                onClick={() => setActiveView('gallery')}
                className={`px-6 py-3 rounded-full font-nature font-medium transition-all duration-300 ${
                  activeView === 'gallery'
                    ? 'bg-gradient-to-r from-forest-600 to-forest-700 text-white shadow-forest'
                    : 'bg-vintage-100 text-forest-600 hover:bg-forest-100'
                }`}
              >
                <span className="flex items-center space-x-2">
                  <Camera className="h-4 w-4" />
                  <span>Th∆∞ vi·ªán ·∫£nh</span>
                </span>
              </button>
              <button
                onClick={() => setActiveView('sensors')}
                className={`px-6 py-3 rounded-full font-nature font-medium transition-all duration-300 ${
                  activeView === 'sensors'
                    ? 'bg-gradient-to-r from-forest-600 to-forest-700 text-white shadow-forest'
                    : 'bg-vintage-100 text-forest-600 hover:bg-forest-100'
                }`}
              >
                <span className="flex items-center space-x-2">
                  <Activity className="h-4 w-4" />
                  <span>C·∫£m bi·∫øn IoT</span>
                </span>
              </button>
            </div>

            {/* Enhanced 3D Viewer */}
            {activeView === '3d' && (
              <div 
                className="relative bg-gradient-to-br from-vintage-50 to-forest-50 rounded-3xl overflow-hidden shadow-2xl border border-forest-200/30 wood-grain"
                style={{ perspective: '1200px' }}
                onMouseMove={handleMouseMove}
                onMouseLeave={handleMouseLeave}
              >
                <div className="aspect-video relative">
                  <div
                    className="absolute inset-0 transition-transform duration-300 ease-out"
                    style={{
                      transform: `rotateX(${rotationX}deg) rotateY(${rotationY}deg) translateZ(60px)`,
                      transformStyle: 'preserve-3d'
                    }}
                  >
                    {/* Enhanced main tree image with multiple 3D layers */}
                    <div className="relative w-full h-full">
                      <img
                        src={tree.image}
                        alt={tree.name}
                        className="w-full h-full object-cover rounded-3xl"
                      />
                      
                      {/* Multiple 3D depth layers */}
                      <div 
                        className="absolute inset-0 bg-gradient-to-t from-forest-900/40 to-transparent rounded-3xl"
                        style={{ transform: 'translateZ(15px)' }}
                      />
                      
                      <div 
                        className="absolute inset-0 bg-gradient-to-br from-forest-500/10 to-vintage-500/10 rounded-3xl"
                        style={{ transform: 'translateZ(25px)' }}
                      />
                      
                      {/* Enhanced floating info cards with better 3D positioning */}
                      <div 
                        className="absolute top-6 left-6 bg-vintage-50/95 backdrop-blur-md p-6 rounded-2xl shadow-wood border border-forest-200/30"
                        style={{ transform: 'translateZ(40px)' }}
                      >
                        <div className="flex items-center space-x-4">
                          <div className={`w-14 h-14 bg-gradient-to-br ${getStatusColor(tree.status)} rounded-xl flex items-center justify-center`}>
                            <TreePine className="h-7 w-7 text-white" />
                          </div>
                          <div>
                            <div className="font-nature font-bold text-forest-900 text-lg">{getStatusText(tree.status)}</div>
                            <div className="text-sm text-forest-600">T√¨nh tr·∫°ng c√¢y</div>
                            <div className="text-xs text-forest-500">C·∫≠p nh·∫≠t: 5 ph√∫t tr∆∞·ªõc</div>
                          </div>
                        </div>
                      </div>

                      <div 
                        className="absolute top-6 right-6 bg-vintage-50/95 backdrop-blur-md p-6 rounded-2xl shadow-wood border border-forest-200/30"
                        style={{ transform: 'translateZ(35px)' }}
                      >
                        <div className="flex items-center space-x-4">
                          <div className="w-14 h-14 bg-gradient-to-br from-forest-500 to-forest-600 rounded-xl flex items-center justify-center">
                            <BarChart3 className="h-7 w-7 text-white" />
                          </div>
                          <div>
                            <div className="font-nature font-bold text-forest-900 text-lg">{tree.healthScore}%</div>
                            <div className="text-sm text-forest-600">Ch·ªâ s·ªë s·ª©c kh·ªèe</div>
                            <div className="text-xs text-forest-500">ƒê√°nh gi√°: Xu·∫•t s·∫Øc</div>
                          </div>
                        </div>
                      </div>

                      <div 
                        className="absolute bottom-6 left-6 bg-vintage-50/95 backdrop-blur-md p-6 rounded-2xl shadow-wood border border-forest-200/30"
                        style={{ transform: 'translateZ(30px)' }}
                      >
                        <div className="flex items-center space-x-4">
                          <div className="w-14 h-14 bg-gradient-to-br from-vintage-500 to-vintage-600 rounded-xl flex items-center justify-center">
                            <Crown className="h-7 w-7 text-white" />
                          </div>
                          <div>
                            <div className="font-nature font-bold text-vintage-900 text-lg">{tree.rarity}</div>
                            <div className="text-sm text-vintage-600">ƒê·ªô hi·∫øm</div>
                            <div className="text-xs text-vintage-500">Gi√° tr·ªã: {tree.marketValue}</div>
                          </div>
                        </div>
                      </div>

                      <div 
                        className="absolute bottom-6 right-6 bg-vintage-50/95 backdrop-blur-md p-6 rounded-2xl shadow-wood border border-forest-200/30"
                        style={{ transform: 'translateZ(25px)' }}
                      >
                        <div className="flex items-center space-x-4">
                          <div className="w-14 h-14 bg-gradient-to-br from-green-500 to-emerald-500 rounded-xl flex items-center justify-center">
                            <Leaf className="h-7 w-7 text-white" />
                          </div>
                          <div>
                            <div className="font-nature font-bold text-green-900 text-lg">{tree.teaQuality}</div>
                            <div className="text-sm text-green-600">Ch·∫•t l∆∞·ª£ng tr√†</div>
                            <div className="text-xs text-green-500">NƒÉng su·∫•t: {tree.annualYield}</div>
                          </div>
                        </div>
                      </div>

                      {/* Enhanced 3D depth indicators with more variety */}
                      <div className="absolute inset-0 pointer-events-none">
                        <div className="absolute top-1/4 left-1/4 w-3 h-3 bg-forest-400/60 rounded-full animate-float" style={{ transform: 'translateZ(50px)' }} />
                        <div className="absolute top-3/4 right-1/4 w-4 h-4 bg-vintage-400/50 rounded-full animate-float" style={{ transform: 'translateZ(45px)', animationDelay: '1s' }} />
                        <div className="absolute bottom-1/3 left-1/2 w-2 h-2 bg-forest-300/70 rounded-full animate-float" style={{ transform: 'translateZ(55px)', animationDelay: '2s' }} />
                        <div className="absolute top-1/2 right-1/3 w-1 h-1 bg-green-400/80 rounded-full animate-float" style={{ transform: 'translateZ(60px)', animationDelay: '0.5s' }} />
                      </div>
                    </div>
                  </div>
                </div>
                
                {/* Enhanced 3D Instructions */}
                <div className="absolute bottom-4 right-4 bg-forest-900/90 backdrop-blur-sm text-white px-6 py-3 rounded-full text-sm font-nature flex items-center space-x-2">
                  <Eye className="h-4 w-4" />
                  <span>Di chuy·ªÉn chu·ªôt ƒë·ªÉ xoay 3D</span>
                </div>
              </div>
            )}

            {/* Enhanced Gallery View */}
            {activeView === 'gallery' && (
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                {tree.images.map((image, index) => (
                  <div key={index} className="relative group">
                    <div className="aspect-video overflow-hidden rounded-2xl shadow-wood border border-forest-200/30">
                      <img
                        src={image}
                        alt={`${tree.name} - ·∫¢nh ${index + 1}`}
                        className="w-full h-full object-cover group-hover:scale-110 transition-transform duration-500"
                      />
                      <div className="absolute inset-0 bg-gradient-to-t from-forest-900/40 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300" />
                    </div>
                    <div className="absolute bottom-4 left-4 bg-vintage-50/90 backdrop-blur-sm px-4 py-2 rounded-full text-sm font-nature text-forest-800 opacity-0 group-hover:opacity-100 transition-opacity duration-300">
                      ·∫¢nh {index + 1} - {index === 0 ? 'To√†n c·∫£nh' : index === 1 ? 'Th√¢n c√¢y' : index === 2 ? 'L√° non' : 'Chi ti·∫øt'}
                    </div>
                  </div>
                ))}
              </div>
            )}

            {/* New IoT Sensors View */}
            {activeView === 'sensors' && (
              <div className="space-y-6">
                <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
                  {Object.entries(tree.sensors).map(([key, sensor]) => {
                    const IconComponent = getSensorIcon(key);
                    return (
                      <button
                        key={key}
                        onClick={() => setSelectedSensor(key)}
                        className={`p-4 rounded-2xl transition-all duration-300 ${
                          selectedSensor === key
                            ? 'bg-gradient-to-br from-forest-500 to-forest-600 text-white shadow-forest'
                            : 'bg-vintage-50/90 text-forest-700 hover:bg-forest-100'
                        }`}
                      >
                        <IconComponent className="h-8 w-8 mx-auto mb-2" />
                        <div className="text-sm font-nature font-medium">
                          {key === 'soilMoisture' ? 'ƒê·ªô ·∫©m ƒë·∫•t' :
                           key === 'nutrients' ? 'Dinh d∆∞·ª°ng' :
                           key === 'growth' ? 'TƒÉng tr∆∞·ªüng' : 'Stress'}
                        </div>
                        <div className="text-lg font-bold">
                          {sensor.value}{sensor.unit}
                        </div>
                      </button>
                    );
                  })}
                </div>

                {/* Sensor Detail */}
                {selectedSensor !== 'overview' && (
                  <div className="bg-vintage-50/90 backdrop-blur-sm rounded-3xl p-8 shadow-wood border border-forest-200/30">
                    <div className="flex items-center space-x-4 mb-6">
                      {React.createElement(getSensorIcon(selectedSensor), { className: "h-8 w-8 text-forest-600" })}
                      <h3 className="font-elegant font-bold text-2xl text-forest-900">
                        {selectedSensor === 'soilMoisture' ? 'ƒê·ªô ·∫©m ƒë·∫•t' :
                         selectedSensor === 'nutrients' ? 'Dinh d∆∞·ª°ng' :
                         selectedSensor === 'growth' ? 'TƒÉng tr∆∞·ªüng' : 'M·ª©c ƒë·ªô stress'}
                      </h3>
                    </div>
                    
                    <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
                      <div className="text-center">
                        <div className="text-4xl font-bold text-forest-900 mb-2">
                          {tree.sensors[selectedSensor as keyof typeof tree.sensors].value}
                          {tree.sensors[selectedSensor as keyof typeof tree.sensors].unit}
                        </div>
                        <div className="text-forest-600">Gi√° tr·ªã hi·ªán t·∫°i</div>
                      </div>
                      <div className="text-center">
                        <div className={`text-2xl font-bold mb-2 bg-gradient-to-r ${getStatusColor(tree.sensors[selectedSensor as keyof typeof tree.sensors].status)} bg-clip-text text-transparent`}>
                          {getStatusText(tree.sensors[selectedSensor as keyof typeof tree.sensors].status)}
                        </div>
                        <div className="text-forest-600">Tr·∫°ng th√°i</div>
                      </div>
                      <div className="text-center">
                        <div className="text-lg font-semibold text-forest-800 mb-2">
                          {tree.sensors[selectedSensor as keyof typeof tree.sensors].lastUpdate}
                        </div>
                        <div className="text-forest-600">C·∫≠p nh·∫≠t cu·ªëi</div>
                      </div>
                    </div>
                  </div>
                )}
              </div>
            )}

            {/* Enhanced Environment Data */}
            <div className="bg-vintage-50/90 backdrop-blur-sm rounded-3xl p-8 shadow-wood border border-forest-200/30 wood-grain">
              <h3 className="font-elegant font-bold text-2xl text-forest-900 mb-6 flex items-center">
                <Leaf className="h-6 w-6 mr-3 text-forest-600" />
                M√¥i tr∆∞·ªùng s·ªëng chi ti·∫øt
              </h3>
              
              <div className="grid grid-cols-2 md:grid-cols-4 gap-6">
                <div className="text-center group">
                  <div className="w-16 h-16 bg-gradient-to-br from-orange-500 to-red-500 rounded-2xl flex items-center justify-center mx-auto mb-3 group-hover:scale-110 transition-transform duration-300">
                    <Thermometer className="h-8 w-8 text-white" />
                  </div>
                  <div className="font-nature font-bold text-forest-900">{tree.environment.temperature}</div>
                  <div className="text-sm text-forest-600">Nhi·ªát ƒë·ªô</div>
                </div>
                
                <div className="text-center group">
                  <div className="w-16 h-16 bg-gradient-to-br from-blue-500 to-cyan-500 rounded-2xl flex items-center justify-center mx-auto mb-3 group-hover:scale-110 transition-transform duration-300">
                    <Droplets className="h-8 w-8 text-white" />
                  </div>
                  <div className="font-nature font-bold text-forest-900">{tree.environment.humidity}</div>
                  <div className="text-sm text-forest-600">ƒê·ªô ·∫©m</div>
                </div>
                
                <div className="text-center group">
                  <div className="w-16 h-16 bg-gradient-to-br from-green-500 to-emerald-500 rounded-2xl flex items-center justify-center mx-auto mb-3 group-hover:scale-110 transition-transform duration-300">
                    <Wind className="h-8 w-8 text-white" />
                  </div>
                  <div className="font-nature font-bold text-forest-900">{tree.environment.windSpeed}</div>
                  <div className="text-sm text-forest-600">T·ªëc ƒë·ªô gi√≥</div>
                </div>
                
                <div className="text-center group">
                  <div className="w-16 h-16 bg-gradient-to-br from-yellow-500 to-orange-500 rounded-2xl flex items-center justify-center mx-auto mb-3 group-hover:scale-110 transition-transform duration-300">
                    <Sun className="h-8 w-8 text-white" />
                  </div>
                  <div className="font-nature font-bold text-forest-900">{tree.environment.sunlight}</div>
                  <div className="text-sm text-forest-600">√Ånh s√°ng</div>
                </div>
              </div>

              {/* Additional environment data */}
              <div className="grid grid-cols-2 md:grid-cols-4 gap-6 mt-6 pt-6 border-t border-forest-200/30">
                <div className="text-center">
                  <div className="font-nature font-bold text-forest-900">pH {tree.environment.soilPh}</div>
                  <div className="text-sm text-forest-600">ƒê·ªô pH ƒë·∫•t</div>
                </div>
                <div className="text-center">
                  <div className="font-nature font-bold text-forest-900">{tree.environment.rainfall}</div>
                  <div className="text-sm text-forest-600">L∆∞·ª£ng m∆∞a</div>
                </div>
                <div className="text-center">
                  <div className="font-nature font-bold text-forest-900">{tree.environment.airQuality}</div>
                  <div className="text-sm text-forest-600">Ch·∫•t l∆∞·ª£ng kh√¥ng kh√≠</div>
                </div>
                <div className="text-center">
                  <div className="font-nature font-bold text-forest-900">{tree.environment.uvIndex}</div>
                  <div className="text-sm text-forest-600">Ch·ªâ s·ªë UV</div>
                </div>
              </div>
            </div>
          </div>

          {/* Enhanced Sidebar Info - Better organized */}
          <div className="xl:col-span-1 space-y-6">
            {/* Enhanced Tree Stats */}
            <div className="bg-vintage-50/90 backdrop-blur-sm rounded-3xl p-6 shadow-wood border border-forest-200/30 wood-grain">
              <h3 className="font-elegant font-bold text-lg text-forest-900 mb-4 flex items-center">
                <TreePine className="h-5 w-5 mr-2" />
                Th√¥ng s·ªë chi ti·∫øt
              </h3>
              
              <div className="space-y-3">
                <div className="flex justify-between items-center p-2 bg-forest-50/50 rounded-lg">
                  <span className="text-forest-600 font-nature text-sm">Chi·ªÅu cao:</span>
                  <span className="font-bold text-forest-900 text-sm">{tree.height}</span>
                </div>
                <div className="flex justify-between items-center p-2 bg-vintage-100/50 rounded-lg">
                  <span className="text-forest-600 font-nature text-sm">ƒê∆∞·ªùng k√≠nh:</span>
                  <span className="font-bold text-forest-900 text-sm">{tree.diameter}</span>
                </div>
                <div className="flex justify-between items-center p-2 bg-forest-50/50 rounded-lg">
                  <span className="text-forest-600 font-nature text-sm">Chu vi th√¢n:</span>
                  <span className="font-bold text-forest-900 text-sm">{tree.trunkCircumference}</span>
                </div>
                <div className="flex justify-between items-center p-2 bg-vintage-100/50 rounded-lg">
                  <span className="text-forest-600 font-nature text-sm">T√°n l√°:</span>
                  <span className="font-bold text-forest-900 text-sm">{tree.canopySpread}</span>
                </div>
                <div className="flex justify-between items-center p-2 bg-forest-50/50 rounded-lg">
                  <span className="text-forest-600 font-nature text-sm">S·ªë l√°:</span>
                  <span className="font-bold text-forest-900 text-sm">{tree.leafCount}</span>
                </div>
                <div className="flex justify-between items-center p-2 bg-vintage-100/50 rounded-lg">
                  <span className="text-forest-600 font-nature text-sm">S·ªë c√†nh:</span>
                  <span className="font-bold text-forest-900 text-sm">{tree.branchCount}</span>
                </div>
              </div>
            </div>

            {/* Care Schedule */}
            <div className="bg-vintage-50/90 backdrop-blur-sm rounded-3xl p-6 shadow-wood border border-forest-200/30 wood-grain">
              <h3 className="font-elegant font-bold text-lg text-forest-900 mb-4 flex items-center">
                <Calendar className="h-5 w-5 mr-2" />
                L·ªãch chƒÉm s√≥c
              </h3>
              
              <div className="space-y-3">
                <div className="p-3 bg-green-50 border border-green-200 rounded-xl">
                  <div className="font-nature font-semibold text-green-800 text-sm">ChƒÉm s√≥c cu·ªëi</div>
                  <div className="text-green-600 text-sm">{tree.lastCare}</div>
                </div>
                <div className="p-3 bg-blue-50 border border-blue-200 rounded-xl">
                  <div className="font-nature font-semibold text-blue-800 text-sm">ChƒÉm s√≥c ti·∫øp theo</div>
                  <div className="text-blue-600 text-sm">{tree.nextCare}</div>
                </div>
              </div>
            </div>

            {/* Health Score */}
            <div className="bg-vintage-50/90 backdrop-blur-sm rounded-3xl p-6 shadow-wood border border-forest-200/30 wood-grain">
              <h3 className="font-elegant font-bold text-lg text-forest-900 mb-4">Ch·ªâ s·ªë s·ª©c kh·ªèe</h3>
              
              <div className="text-center mb-4">
                <div className="text-4xl font-bold text-green-600 mb-2">{tree.healthScore}%</div>
                <div className="w-full bg-forest-200 rounded-full h-3 mb-3">
                  <div 
                    className="bg-gradient-to-r from-green-500 to-emerald-500 h-3 rounded-full transition-all duration-1000" 
                    style={{ width: `${tree.healthScore}%` }}
                  ></div>
                </div>
                <div className="grid grid-cols-2 gap-2 text-xs">
                  <div className="text-center">
                    <div className="font-bold text-forest-900">Xu·∫•t s·∫Øc</div>
                    <div className="text-forest-600">ƒê√°nh gi√°</div>
                  </div>
                  <div className="text-center">
                    <div className="font-bold text-forest-900">A+</div>
                    <div className="text-forest-600">X·∫øp h·∫°ng</div>
                  </div>
                </div>
              </div>
              
              <div className="text-center">
                <div className="font-nature text-forest-800 italic text-sm leading-relaxed">{tree.notes}</div>
              </div>
            </div>

            {/* Cultural Significance */}
            <div className="bg-vintage-50/90 backdrop-blur-sm rounded-3xl p-6 shadow-wood border border-forest-200/30 wood-grain">
              <h3 className="font-elegant font-bold text-lg text-forest-900 mb-4 flex items-center">
                <Heart className="h-5 w-5 mr-2" />
                Gi√° tr·ªã vƒÉn h√≥a
              </h3>
              
              <div className="space-y-3">
                <div>
                  <h4 className="font-nature font-semibold text-forest-800 mb-1 text-sm">Truy·ªÅn thuy·∫øt:</h4>
                  <p className="text-forest-700 text-xs leading-relaxed">{tree.folklore.legend}</p>
                </div>
                <div>
                  <h4 className="font-nature font-semibold text-forest-800 mb-1 text-sm">√ù nghƒ©a:</h4>
                  <p className="text-forest-700 text-xs leading-relaxed">{tree.folklore.culturalValue}</p>
                </div>
              </div>
            </div>

            {/* Achievements */}
            <div className="bg-vintage-50/90 backdrop-blur-sm rounded-3xl p-6 shadow-wood border border-forest-200/30 wood-grain">
              <h3 className="font-elegant font-bold text-lg text-forest-900 mb-4 flex items-center">
                <Award className="h-5 w-5 mr-2" />
                Gi·∫£i th∆∞·ªüng
              </h3>
              
              <div className="space-y-3">
                {tree.achievements.slice(0, 2).map((achievement, index) => (
                  <div key={index} className="p-3 bg-forest-50/50 rounded-xl border border-forest-200/30">
                    <div className="font-nature font-semibold text-forest-900 text-sm mb-1">{achievement.title}</div>
                    <div className="text-xs text-forest-700 mb-1">{achievement.organization}</div>
                    <div className="text-xs text-forest-600">{achievement.date}</div>
                  </div>
                ))}
              </div>
            </div>

            {/* Care History - Compact */}
            <div className="bg-vintage-50/90 backdrop-blur-sm rounded-3xl p-6 shadow-wood border border-forest-200/30 wood-grain">
              <h3 className="font-elegant font-bold text-lg text-forest-900 mb-4 flex items-center">
                <Users className="h-5 w-5 mr-2" />
                L·ªãch s·ª≠ chƒÉm s√≥c
              </h3>
              
              <div className="space-y-3 max-h-64 overflow-y-auto">
                {tree.careHistory.slice(0, 3).map((record, index) => (
                  <div key={index} className="p-3 bg-forest-50/50 rounded-xl border border-forest-200/30">
                    <div className="flex justify-between items-start mb-2">
                      <div className="font-nature font-semibold text-forest-900 text-sm">{record.action}</div>
                      <div className="text-xs text-forest-600">{record.date}</div>
                    </div>
                    <div className="text-xs text-forest-700 mb-2 leading-relaxed">{record.note}</div>
                    <div className="flex justify-between items-center text-xs text-forest-600 mb-2">
                      <span>{record.technician}</span>
                      <span>{record.duration}</span>
                    </div>
                    <div>
                      <span className="px-2 py-1 bg-green-100 text-green-800 text-xs rounded-full">
                        {record.status}
                      </span>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default TreeDetail;