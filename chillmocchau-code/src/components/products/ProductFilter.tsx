import { TreePine, Mountain, Filter } from 'lucide-react';
import Card from '../ui/Card';

interface FilterProps {
  filters: {
    category: string;
    ageRange: string;
    priceRange: string;
    status: string;
    location: string;
  };
  onFiltersChange: (filters: {
    category: string;
    ageRange: string;
    priceRange: string;
    status: string;
    location: string;
  }) => void;
}

const ProductFilter: React.FC<FilterProps> = ({ filters, onFiltersChange }) => {
  const handleFilterChange = (key: string, value: string) => {
    onFiltersChange({
      ...filters,
      [key]: value
    });
  };

  const categories = [
    { value: '', label: 'T·∫•t c·∫£ lo·∫°i c√¢y', icon: 'üå≤' },
    { value: 'shan-tuyet', label: 'Shan Tuy·∫øt', icon: '‚ùÑÔ∏è' },
    { value: 'ta-xua', label: 'T√† X√πa', icon: 'üèîÔ∏è' },
    { value: 'hoang-su-phi', label: 'Ho√†ng Su Ph√¨', icon: 'üåø' },
    { value: 'moc-chau', label: 'M·ªôc Ch√¢u', icon: 'üçÉ' },
    { value: 'tan-cuong', label: 'T√¢n C∆∞∆°ng', icon: 'üå±' },
    { value: 'phu-tho', label: 'Ph√∫ Th·ªç', icon: 'üå≥' }
  ];

  const ageRanges = [
    { value: '', label: 'T·∫•t c·∫£ tu·ªïi c√¢y' },
    { value: '0-500', label: 'D∆∞·ªõi 500 nƒÉm' },
    { value: '500-800', label: '500-800 nƒÉm' },
    { value: '800-1000', label: '800-1000 nƒÉm' },
    { value: '1000-1500', label: '1000-1500 nƒÉm' },
    { value: '1500', label: 'Tr√™n 1500 nƒÉm (Huy·ªÅn tho·∫°i)' }
  ];

  const priceRanges = [
    { value: '', label: 'T·∫•t c·∫£ m·ª©c gi√°' },
    { value: '0-30000000', label: 'D∆∞·ªõi 30 tri·ªáu' },
    { value: '30000000-50000000', label: '30-50 tri·ªáu' },
    { value: '50000000-80000000', label: '50-80 tri·ªáu' },
    { value: '80000000', label: 'Tr√™n 80 tri·ªáu' }
  ];

  const statuses = [
    { value: '', label: 'T·∫•t c·∫£ tr·∫°ng th√°i' },
    { value: 'available', label: 'C√≥ s·∫µn', color: 'text-forest-600' },
    { value: 'rented', label: 'ƒê√£ thu√™', color: 'text-earth-600' },
    { value: 'sold', label: 'ƒê√£ b√°n', color: 'text-mountain-600' }
  ];

  const locations = [
    { value: '', label: 'T·∫•t c·∫£ v√πng n√∫i' },
    { value: 'L√†o Cai', label: 'L√†o Cai' },
    { value: 'Y√™n B√°i', label: 'Y√™n B√°i' },
    { value: 'H√† Giang', label: 'H√† Giang' },
    { value: 'S∆°n La', label: 'S∆°n La' },
    { value: 'Th√°i Nguy√™n', label: 'Th√°i Nguy√™n' },
    { value: 'Ph√∫ Th·ªç', label: 'Ph√∫ Th·ªç' }
  ];

  return (
    <Card variant="forest" className="p-8">
      <div className="flex items-center space-x-3 mb-8">
        <div className="w-10 h-10 bg-gradient-to-br from-forest-500 to-moss-500 rounded-xl flex items-center justify-center">
          <Filter className="h-5 w-5 text-white" />
        </div>
        <h3 className="font-nature font-bold text-xl text-forest-900">B·ªô l·ªçc n√¢ng cao</h3>
      </div>
      
      <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-5 gap-6">
        {/* Category */}
        <div className="space-y-3">
          <label className="flex items-center space-x-2 text-sm font-semibold text-forest-800">
            <TreePine className="h-4 w-4" />
            <span>Lo·∫°i c√¢y tr√†</span>
          </label>
          <select
            value={filters.category}
            onChange={(e) => handleFilterChange('category', e.target.value)}
            className="w-full px-4 py-3 bg-white/80 border border-forest-200 rounded-xl focus:outline-none focus:ring-2 focus:ring-forest-500 text-forest-800"
          >
            {categories.map((category) => (
              <option key={category.value} value={category.value}>
                {category.icon} {category.label}
              </option>
            ))}
          </select>
        </div>

        {/* Age Range */}
        <div className="space-y-3">
          <label className="flex items-center space-x-2 text-sm font-semibold text-forest-800">
            <Mountain className="h-4 w-4" />
            <span>Tu·ªïi c√¢y</span>
          </label>
          <select
            value={filters.ageRange}
            onChange={(e) => handleFilterChange('ageRange', e.target.value)}
            className="w-full px-4 py-3 bg-white/80 border border-forest-200 rounded-xl focus:outline-none focus:ring-2 focus:ring-forest-500 text-forest-800"
          >
            {ageRanges.map((range) => (
              <option key={range.value} value={range.value}>
                {range.label}
              </option>
            ))}
          </select>
        </div>

        {/* Price Range */}
        <div className="space-y-3">
          <label className="text-sm font-semibold text-forest-800">
            Gi√° b√°n
          </label>
          <select
            value={filters.priceRange}
            onChange={(e) => handleFilterChange('priceRange', e.target.value)}
            className="w-full px-4 py-3 bg-white/80 border border-forest-200 rounded-xl focus:outline-none focus:ring-2 focus:ring-forest-500 text-forest-800"
          >
            {priceRanges.map((range) => (
              <option key={range.value} value={range.value}>
                {range.label}
              </option>
            ))}
          </select>
        </div>

        {/* Status */}
        <div className="space-y-3">
          <label className="text-sm font-semibold text-forest-800">
            Tr·∫°ng th√°i
          </label>
          <select
            value={filters.status}
            onChange={(e) => handleFilterChange('status', e.target.value)}
            className="w-full px-4 py-3 bg-white/80 border border-forest-200 rounded-xl focus:outline-none focus:ring-2 focus:ring-forest-500 text-forest-800"
          >
            {statuses.map((status) => (
              <option key={status.value} value={status.value}>
                {status.label}
              </option>
            ))}
          </select>
        </div>

        {/* Location */}
        <div className="space-y-3">
          <label className="text-sm font-semibold text-forest-800">
            V√πng n√∫i
          </label>
          <select
            value={filters.location}
            onChange={(e) => handleFilterChange('location', e.target.value)}
            className="w-full px-4 py-3 bg-white/80 border border-forest-200 rounded-xl focus:outline-none focus:ring-2 focus:ring-forest-500 text-forest-800"
          >
            {locations.map((location) => (
              <option key={location.value} value={location.value}>
                {location.label}
              </option>
            ))}
          </select>
        </div>
      </div>
    </Card>
  );
};

export default ProductFilter;